<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:FIFOCalculator.ViewModels"
             mc:Ignorable="d" d:DesignWidth="500" d:DesignHeight="450"
             x:Class="FIFOCalculator.Views.EntryEditorView"
             x:DataType="viewModels:EntryEditorViewModel"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:controls="clr-namespace:FIFOCalculator.Controls"
             x:CompileBindings="True">

	<UserControl.Resources>

		<ControlTheme x:Key="{x:Type NumericUpDown}" TargetType="NumericUpDown">
			<Setter Property="Foreground" Value="{DynamicResource TextControlForeground}" />
			<Setter Property="Background" Value="{DynamicResource TextControlBackground}" />
			<Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThickness}" />
			<Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrush}" />
			<Setter Property="MinHeight" Value="{DynamicResource TextControlThemeMinHeight}" />
			<Setter Property="MinWidth" Value="{DynamicResource TextControlThemeMinWidth}" />
			<Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
			<Setter Property="Padding" Value="{DynamicResource TextControlThemePadding}" />
			<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
			<Setter Property="Template">
				<ControlTemplate>
					<ButtonSpinner Name="PART_Spinner"
								   Background="{TemplateBinding Background}"
								   BorderThickness="{TemplateBinding BorderThickness}"
								   BorderBrush="{TemplateBinding BorderBrush}"
								   CornerRadius="{TemplateBinding CornerRadius}"
								   Padding="0"
								   MinWidth="0"
								   HorizontalContentAlignment="Stretch"
								   VerticalContentAlignment="Stretch"
								   AllowSpin="{TemplateBinding AllowSpin}"
								   Focusable="False"
								   ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}"
								   DataValidationErrors.Errors="{TemplateBinding (DataValidationErrors.Errors)}"
								   ButtonSpinnerLocation="{TemplateBinding ButtonSpinnerLocation}">
						<TextBox Name="PART_TextBox"
								 Background="Transparent"
								 BorderBrush="Transparent"
								 Margin="-1"
								 Padding="{TemplateBinding Padding}"
								 MinWidth="0"
								 Foreground="{TemplateBinding Foreground}"
								 FontSize="{TemplateBinding FontSize}"
								 Watermark="{TemplateBinding Watermark}"
								 IsReadOnly="{TemplateBinding IsReadOnly}"
								 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								 Text="{TemplateBinding Text}"
								 AcceptsReturn="False"
								 TextWrapping="NoWrap" />
					</ButtonSpinner>
				</ControlTemplate>
			</Setter>
		</ControlTheme>

	</UserControl.Resources>

    <DockPanel>
        <DockPanel DockPanel.Dock="Top">
            <controls:SvgButton DockPanel.Dock="Left" SvgPath="/Assets/add.svg" >
                <Button.Flyout>
                    <Flyout Placement="BottomEdgeAlignedLeft">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Spacing="8">
                                <StackPanel.Styles>
                                    <Style Selector="UniformGrid > :is(Control)">
                                        <Setter Property="Margin" Value="1 0"></Setter>
                                    </Style>
                                </StackPanel.Styles>
                                <TextBox VerticalAlignment="Top" Watermark="Date" Text="{Binding DateText}" />
                                <NumericUpDown VerticalAlignment="Top" AllowSpin="False"
                                               ShowButtonSpinner="False" Minimum="0" Watermark="Units"
                                               DockPanel.Dock="Right" Value="{Binding Units}" />
                                <NumericUpDown VerticalAlignment="Top" AllowSpin="False"
                                               ShowButtonSpinner="False" Minimum="0" Watermark="Price"
                                               DockPanel.Dock="Right" Value="{Binding PricePerUnit}" />
                                <TextBlock IsVisible="{Binding Total, Converter={x:Static ObjectConverters.IsNotNull}}" VerticalAlignment="Center" Text="{Binding Total, StringFormat='({0:C})'}" />
                            </StackPanel>
                            <Button HorizontalAlignment="Right" Margin="10" DockPanel.Dock="Right"
                                    Command="{Binding Add}" Content="Add" />
                        </StackPanel>
                        <i:Interaction.Behaviors>
                            <ia:DataTriggerBehavior Binding="{Binding Added^}" Value="false">
                                <ia:CallMethodAction TargetObject="{Binding $parent[Flyout]}" MethodName="Hide" />
                            </ia:DataTriggerBehavior>
                        </i:Interaction.Behaviors>
                    </Flyout>
                </Button.Flyout>
            </controls:SvgButton>
            <controls:SvgButton DockPanel.Dock="Right" SvgPath="/Assets/delete2.svg" Command="{Binding DeleteSelected}" />
            <TextBlock FontWeight="Bold" VerticalAlignment="Center" TextAlignment="Center" Text="{Binding Title}" />
        </DockPanel>
        <DataGrid SelectionMode="Single" ItemsSource="{Binding Entries}" SelectedItem="{Binding SelectedEntry}">
            <DataGrid.Columns>
                <DataGridTextColumn CanUserSort="False" Header="Date" Width="*" IsReadOnly="True"
                                    x:DataType="viewModels:EntryViewModel"
                                    Binding="{Binding When, Mode=OneWay, StringFormat='{}{0:d}'}" />
                <DataGridTextColumn CanUserSort="False" Header="Units" Width="*" IsReadOnly="True"
                                    x:DataType="viewModels:EntryViewModel" Binding="{Binding Units}" />
                <DataGridTextColumn CanUserSort="False" Header="Price" Width="*" IsReadOnly="True"
                                    x:DataType="viewModels:EntryViewModel"
                                    Binding="{Binding PricePerUnit, Mode=OneWay, StringFormat='{}{0:C}'}" />
                <DataGridTextColumn CanUserSort="False" Header="Total" Width="*" IsReadOnly="True"
                                    x:DataType="viewModels:EntryViewModel"
                                    Binding="{Binding Total, Mode=OneWay, StringFormat='{}{0:C}'}" />
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</UserControl>
